version: '3.3'

services:
  backend:
    container_name: compliance-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - compliance-network

  frontend:
    container_name: compliance-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - compliance-network
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx:alpine
    container_name: compliance-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf/options-ssl-nginx.conf:/etc/nginx/conf.d/options-ssl-nginx.conf:ro
      - ./certbot/conf/ssl-dhparams.pem:/etc/nginx/conf.d/ssl-dhparams.pem:ro
    depends_on:
      - frontend
      - backend
    networks:
      - compliance-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: compliance-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - compliance-network
    depends_on:
      - nginx

networks:
  compliance-network:
    driver: bridge