#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Settings
domain="dawood.design"
email="your@email.com"  # Replace with your email
staging=1  # Set to 0 for production

echo -e "${GREEN}### Cleaning up existing setup...${NC}"
docker-compose down
rm -rf certbot/

echo -e "${GREEN}### Creating directories...${NC}"
mkdir -p certbot/conf
mkdir -p certbot/www
chmod -R 755 certbot/www

echo -e "${GREEN}### Starting nginx...${NC}"
docker-compose up -d nginx
echo "Waiting for nginx to start..."
sleep 10

echo -e "${GREEN}### Testing nginx configuration...${NC}"
docker-compose exec nginx nginx -t

echo -e "${GREEN}### Testing ACME challenge directory...${NC}"
docker-compose exec nginx ls -la /var/www/certbot/.well-known/acme-challenge/ || true

echo -e "${GREEN}### Testing HTTP access...${NC}"
curl -v http://$domain/.well-known/acme-challenge/test

# Certbot command with staging
if [ $staging -eq 1 ]; then
    echo -e "${YELLOW}### Running certbot in staging mode...${NC}"
    docker-compose run --rm certbot certonly \
        --webroot \
        --webroot-path /var/www/certbot \
        --email $email \
        --agree-tos \
        --no-eff-email \
        --staging \
        --force-renewal \
        -d $domain \
        -d www.$domain \
        --debug-challenges \
        -v
else
    echo -e "${GREEN}### Running certbot in production mode...${NC}"
    docker-compose run --rm certbot certonly \
        --webroot \
        --webroot-path /var/www/certbot \
        --email $email \
        --agree-tos \
        --no-eff-email \
        --force-renewal \
        -d $domain \
        -d www.$domain \
        --debug-challenges \
        -v
fi

echo -e "${GREEN}### Checking certificate status...${NC}"
docker-compose run --rm certbot certificates

echo -e "${GREEN}### Displaying nginx logs...${NC}"
docker-compose logs nginx